/**
 * Minecraft Command Interface
 * This file is auto-generated by scraping `https://minecraft.gamepedia.com/Commands` and provides overloads for all Java Edition commands.
 *
 * Please raise an issue at `https://github.com/telecraft/typed-commands/issues` if there are any compilation errors in this file.
 */
interface Command {
	(command: "attribute", target: "string", attribute: "string", base?: "string", get?: "get", scale?: "string"): void;
	(command: "attribute", target: "string", attribute: "string", base: "base", set: "set", value: "string"): void;
	(command: "attribute", target: "string", attribute: "string", modifier: "modifier", add: "add", uuid: "string", name: "string", value: "string", options:  "add" |  "multiply" |  "multiply_base"): void;
	(command: "attribute", target: "string", attribute: "string", modifier: "modifier", remove: "remove", uuid: "string"): void;
	(command: "attribute", target: "string", attribute: "string", modifier: "modifier", value: "value", get: "get", uuid: "string", scale: "string"): void;
	(command: "advancement", options:  "grant" |  "revoke", targets?: "string", everything?: "everything"): void;
	(command: "advancement", options:  "grant" |  "revoke", targets?: "string", only?: "only", advancement?: "string", criterion?: "string"): void;
	(command: "advancement", options:  "grant" |  "revoke", targets?: "string", options1?:  "from" |  "through" |  "until", advancement?: "string"): void;
	(command: "ban", targets: "string", reason: "string"): void;
	(command: "ban-ip", targets: "string", reason: "string"): void;
	(command: "banlist", targets: "string", reason: "string"): void;
	(command: "bossbar", add: "add", id: "string", name: "string"): void;
	(command: "bossbar", get: "get", id: "string", options:  "max" |  "players" |  "value" |  "visible"): void;
	(command: "bossbar", list: "list"): void;
	(command: "bossbar", remove: "remove", id: "string"): void;
	(command: "bossbar", set: "set", id: "string", options:  "color" |  "max" |  "name" |  "players" |  "style" |  "value" |  "visible"): void;
	(command: "bossbar", color: "color", options:  "blue" |  "green" |  "pink" |  "purple" |  "red" |  "white" |  "yellow"): void;
	(command: "bossbar", max: "max", maxName: "string"): void;
	(command: "bossbar", name: "name", nameName: "string"): void;
	(command: "bossbar", players: "players", targets: "string"): void;
	(command: "bossbar", style: "style", options:  "notched_6" |  "notched_10" |  "notched_12" |  "notched_20" |  "progress"): void;
	(command: "bossbar", value: "value", valueName: "string"): void;
	(command: "bossbar", visible: "visible", visibleName: "string"): void;
	(command: "clear", targets: "string", item: "string", maxCount: "string"): void;
	(command: "clone", begin: "string", end: "string", destination: "string", options?:  "replace" |  "masked", options1?:  "force" |  "move" |  "normal"): void;
	(command: "clone", begin: "string", end: "string", destination: "string", filtered: "filtered", filter: "string", options?:  "force" |  "move" |  "normal"): void;
	(command: "data", get: "get", block: "block", targetPos: "string", path: "string", scale: "string"): void;
	(command: "data", get: "get", entity: "entity", target: "string", path: "string", scale: "string"): void;
	(command: "data", get: "get", storage: "storage", target: "string", path: "string", scale: "string"): void;
	(command: "data", merge: "merge", block: "block", targetPos: "string", nbt: "string"): void;
	(command: "data", merge: "merge", entity: "entity", target: "string", nbt: "string"): void;
	(command: "data", merge: "merge", storage: "storage", target: "string", nbt: "string"): void;
	(command: "data", modify: "modify", block: "block", targetPos: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", block1?: "block", sourcePos?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", block: "block", targetPos: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", entity?: "entity", source?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", block: "block", targetPos: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", storage?: "storage", source?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", block: "block", targetPos: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", value?: "value", nbt?: "string"): void;
	(command: "data", modify: "modify", entity: "entity", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", block?: "block", sourcePos?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", entity: "entity", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", entity1?: "entity", source?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", entity: "entity", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", storage?: "storage", source?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", entity: "entity", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", value?: "value", valueName?: "string"): void;
	(command: "data", modify: "modify", storage: "storage", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", block?: "block", sourcePos?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", storage: "storage", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", entity?: "entity", source?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", storage: "storage", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", from?: "from", storage1?: "storage", source?: "string", sourcePath?: "string"): void;
	(command: "data", modify: "modify", storage: "storage", target: "string", targetPath: "string", options:  "append" |  "insertindex" |  "merge" |  "prepend" |  "set", value?: "value", valueName?: "string"): void;
	(command: "data", remove: "remove", block: "block", targetPos: "string", path: "string"): void;
	(command: "data", remove: "remove", entity: "entity", target: "string", path: "string"): void;
	(command: "data", remove: "remove", storage: "storage", target: "string", path: "string"): void;
	(command: "datapack", disable: "disable", name: "string"): void;
	(command: "datapack", enable: "enable", name: "string", options?:  "first" |  "last"): void;
	(command: "datapack", enable: "enable", name: "string", options?:  "before" |  "after", existing?: "string"): void;
	(command: "datapack", list: "list", options?:  "available" |  "enabled"): void;
	(command: "debug", options:  "start" |  "stop" |  "report"): void;
	(command: "defaultgamemode", mode: "string"): void;
	(command: "deop", targets: "string"): void;
	(command: "difficulty", options?:  "easy" |  "hard" |  "normal" |  "peaceful"): void;
	(command: "effect", clear: "clear", targets: "string", effect: "string"): void;
	(command: "effect", give: "give", targets: "string", effect: "string", seconds: "string", amplifier: "string", hideParticles: "string"): void;
	(command: "enchant", targets: "string", enchantment: "string", level: "string"): void;
	(command: "execute"): void;
	(command: "experience", add: "add", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "experience", set: "set", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "experience", query: "query", targets: "string", options:  "levels" |  "points"): void;
	(command: "experience", add: "add", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "experience", set: "set", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "experience", query: "query", targets: "string", options:  "levels" |  "points"): void;
	(command: "fill", from: "string", to: "string", block: "string", options?:  "destroy" |  "hollow" |  "keep" |  "outline" |  "replace"): void;
	(command: "forceload", add: "add", from: "string", to: "string"): void;
	(command: "forceload", remove: "remove", from: "string", to: "string"): void;
	(command: "forceload", remove: "remove", all: "all"): void;
	(command: "forceload", query: "query", pos: "string"): void;
	(command: "function", name: "string"): void;
	(command: "gamemode", options?:  "adventure" |  "creative" |  "spectator" |  "survival", target?: "string"): void;
	(command: "gamerule", rule: "rule", name: "name", value: "string"): void;
	(command: "give", target: "string", item: "string", count: "string"): void;
	(command: "help", commandName: "string"): void;
	(command: "kick", target: "string", reason: "string"): void;
	(command: "kill", targets: "string"): void;
	(command: "list"): void;
	(command: "list", uuids: "uuids"): void;
	(command: "locate", StructureType: "string"): void;
	(command: "locatebiome", biome: "biome", ID: "ID"): void;
	(command: "loot", target: "string", source: "string"): void;
	(command: "me", action: "string"): void;
	(command: "msg", targets: "string", message: "string"): void;
	(command: "msg", targets: "string", message: "string"): void;
	(command: "msg", targets: "string", message: "string"): void;
	(command: "op", targets: "string"): void;
	(command: "pardon", targets: "string"): void;
	(command: "pardon", target: "string"): void;
	(command: "particle", name: "string", parameters: "string", pos: "string", delta: "string", speed: "string", count: "string", options?:  "force" |  "normal", viewers?: "string"): void;
	(command: "playsound", sound: "string", source: "string", targets: "string", pos: "string", volume: "string", pitch: "string", minVolume: "string"): void;
	(command: "publish", port: "string"): void;
	(command: "recipe", options:  "give" |  "take", targets?: "string", options1?:  "*" |  "recipe"): void;
	(command: "reload"): void;
	(command: "replaceitem", block: "block", pos: "string", slot: "string", item: "string", count: "string"): void;
	(command: "replaceitem", entity: "entity", targets: "string", slot: "string", item: "string", count: "string"): void;
	(command: "save-all", flush: "string"): void;
	(command: "save-off", flush: "string"): void;
	(command: "save-on", flush: "string"): void;
	(command: "say", message: "string"): void;
	(command: "schedule", fn: "function", fnName: "string", time: "string", options?:  "append" |  "replace"): void;
	(command: "schedule", clear: "clear", fnName: "string"): void;
	(command: "scoreboard", objectives: "objectives", options:  "add" |  "list" |  "modify" |  "remove" |  "setdisplay"): void;
	(command: "scoreboard", add: "add", objective: "string", criterion: "string", displayName: "string"): void;
	(command: "scoreboard", list: "list"): void;
	(command: "scoreboard", modify: "modify", objective: "string", displayname: "displayname", displayName: "string"): void;
	(command: "scoreboard", modify: "modify", objective: "string", rendertype: "rendertype", options:  "hearts" |  "integer"): void;
	(command: "scoreboard", remove: "remove", objective: "string"): void;
	(command: "scoreboard", setdisplay: "setdisplay", slot: "string", objective: "string"): void;
	(command: "scoreboard", players: "players", options:  "add" |  "enable" |  "get" |  "list" |  "operation" |  "remove" |  "reset" |  "set"): void;
	(command: "scoreboard", add: "add", targets: "string", objective: "string", score: "string"): void;
	(command: "scoreboard", enable: "enable", targets: "string", objective: "string"): void;
	(command: "scoreboard", get: "get", target: "string", objective: "string"): void;
	(command: "scoreboard", list: "list", target: "string"): void;
	(command: "scoreboard", operation: "operation", targets: "string", targetObjective: "string", operationName: "string", source: "string", sourceObjective: "string"): void;
	(command: "scoreboard", remove: "remove", targets: "string", objective: "string", score: "string"): void;
	(command: "scoreboard", reset: "reset", targets: "string", objective: "string"): void;
	(command: "scoreboard", set: "set", targets: "string", objective: "string", score: "string"): void;
	(command: "seed"): void;
	(command: "setblock", pos: "string", block: "string", options?:  "destroy" |  "keep" |  "replace"): void;
	(command: "setidletimeout", minutes: "string"): void;
	(command: "setworldspawn", pos: "string"): void;
	(command: "spawnpoint", targets: "string", pos: "string"): void;
	(command: "spectate", target: "string", player: "string"): void;
	(command: "spreadplayers", center: "string", spreadDistance: "string", maxRange: "string", respectTeams: "string", targets: "string"): void;
	(command: "spreadplayers", center: "string", spreadDistance: "string", maxRange: "string", under: "under", maxHeight: "string", respectTeams: "string", targets: "string"): void;
	(command: "stop"): void;
	(command: "stopsound", targets: "string", source: "string", sound: "string"): void;
	(command: "summon", entity: "string", pos: "string", nbt: "string"): void;
	(command: "tag", targets: "string", add: "add", name: "string"): void;
	(command: "tag", targets: "string", list: "list"): void;
	(command: "tag", targets: "string", remove: "remove", name: "string"): void;
	(command: "team", add: "add", team: "string", displayName: "string"): void;
	(command: "team", empty: "empty", team: "string"): void;
	(command: "team", join: "join", team: "string", members: "string"): void;
	(command: "team", leave: "leave", members: "string"): void;
	(command: "team", list: "list", team: "string"): void;
	(command: "team", modify: "modify", team: "string", option: "string", value: "string"): void;
	(command: "team", remove: "remove", team: "string"): void;
	(command: "teammsg", message: "string"): void;
	(command: "teammsg", message: "string"): void;
	(command: "teleport", destination: "string"): void;
	(command: "teleport", location: "string"): void;
	(command: "teleport", targets: "string", destination: "string"): void;
	(command: "teleport", targets: "string", location: "string", rotation: "string"): void;
	(command: "teleport", targets: "string", location: "string", facing: "facing", facingLocation: "string"): void;
	(command: "teleport", targets: "string", location: "string", facing: "facing", entity: "entity", facingEntity: "string", facingAnchor: "string"): void;
	(command: "tell", targets: "string", message: "string"): void;
	(command: "tell", targets: "string", message: "string"): void;
	(command: "tell", targets: "string", message: "string"): void;
	(command: "tellraw", targets: "string", message: "string"): void;
	(command: "time", add: "add", time: "string"): void;
	(command: "time", query: "query", options:  "daytime" |  "gametime" |  "day"): void;
	(command: "time", set: "set", options:  "TimeSpec" |  "time"): void;
	(command: "title", targets: "string", options:  "clear" |  "reset"): void;
	(command: "title", targets: "string", options:  "title" |  "subtitle" |  "actionbar", title?: "string"): void;
	(command: "title", targets: "string", times: "times", fadeIn: "string", stay: "string", fadeOut: "string"): void;
	(command: "tp"): void;
	(command: "trigger", objective: "string", options?:  "add" |  "set", value?: "string"): void;
	(command: "w", targets: "string", message: "string"): void;
	(command: "w", targets: "string", message: "string"): void;
	(command: "w", targets: "string", message: "string"): void;
	(command: "weather", options:  "clear" |  "rain" |  "thunder", duration?: "string"): void;
	(command: "whitelist", add: "add", targets: "string"): void;
	(command: "whitelist", list: "list"): void;
	(command: "whitelist", off: "off"): void;
	(command: "whitelist", on: "on"): void;
	(command: "whitelist", reload: "reload"): void;
	(command: "whitelist", remove: "remove", targets: "string"): void;
	(command: "worldborder", add: "add", distance: "string", time: "string"): void;
	(command: "worldborder", center: "center", pos: "string"): void;
	(command: "worldborder", damage: "damage", amount: "amount", damagePerBlock: "string"): void;
	(command: "worldborder", damage: "damage", buffer: "buffer", distance: "string"): void;
	(command: "worldborder", get: "get"): void;
	(command: "worldborder", set: "set", distance: "string", time: "string"): void;
	(command: "worldborder", warning: "warning", distance: "distance", distanceName: "string"): void;
	(command: "worldborder", warning: "warning", time: "time", timeName: "string"): void;
	(command: "xp", add: "add", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "xp", set: "set", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "xp", query: "query", targets: "string", options:  "levels" |  "points"): void;
	(command: "xp", add: "add", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "xp", set: "set", targets: "string", amount: "string", options?:  "levels" |  "points"): void;
	(command: "xp", query: "query", targets: "string", options:  "levels" |  "points"): void;
}
